https://reqres.in/

Карточка пользователя
    - имя
    - почта
    - фото/заглушка
    - переход на страницу пользователя при клике

Страница пользователя
    - вся инфа
    - кнопка назад
    - возможность отредактировать информацию (patch запрос)

Главная страница
    - пагинация
    - строка поиска
    - фильтры (напр.: чётность id, начинается ли имя с определённой буквы)

Регистрация
    - post-запрос register (email, password)
    - форма (имя, email, пароль, ссылка на аву)
    - сохранять все данные в localstore

Без аккаунта редиректить ото всюду на регистрацию


Необходимо будет отобразить какую-то карточку пользователя с его именем, почтой и фотографией(или заглушкой, если этой фотографии нет, заглушку у того же вк можно взять), при клике на карточку - переход на пользователя, с какой-то минималистичной страницей, где так же есть вся инфа + кнопка назад + возможность информацию отредактировать(для этого в апи есть специальный patch запрос)

На главной странице, кроме самих карточек, нужна пагинация + строка поиска, которая ищет либо имени, либо по почте + какие-нибудь фильтры(честно, на голову приходит "показывать четные id, нечетные id, все id", "фильтр, чтобы имя начиналось/не начиналось с какой-то буквы"

И еще отдельный пункт - регистрация. Получается, есть post-запрос register, куда нужно отправить email и пароль. Вы делаете расширенную форму с полями: имя, email, пароль, ссылка на аватарку(файлом офк отправить не получится), после чего делаете соответствующий запрос - получаете токен, как в ответе. Мне нужно, чтобы вы всю инфу (имя, аватарка, мыло с полей формы) и токен сохраняли в локалстор(вам это в любом случае нужно, чтобы по токену определять, зарегистрирован пользователь или нет). Если пользователь не зарегистрирован, то редиректить его в любом случае на страницу регистрации с формой, запрещая доступ на просмотр других страниц. Большим плюсом будет, если сделаете страницу своего профиля на основе данных с локалстора(которые лучше всего сразу перенести в redux или его аналоги), который так же можно редактировать.

Стек: React/Vue/Angular + TypeScript, так как скорее всего большинство будет делать на реакте, то оценивать буду по разнообразию и релевантности хуков (нужные хуки в нужном месте и их количестве), работу с типизацией, оптимальность алгоритмов
